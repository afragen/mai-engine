.entry {
	position: var(--entry-position, static);
	display: var(--entry-display, (flex));
	flex: var(--entry-flex, (1 1 calc((100% / var(--columns)) - var(--column-gap))));
	flex-direction: var(--entry-flex-direction, column);
	flex-wrap: var(--entry-flex-wrap, nowrap);
	width: 100%;
	max-width: var(--entry-max-width, (calc((100% / var(--columns)) - var(--column-gap))));
	margin: var(--entry-margin, 0);
	padding: var(--entry-padding, 0); /* must be a single value for use in calc() full "full" images */
	overflow: var(--entry-overflow, unset);
	text-align: var(--align-text);
	background: var(--entry-background, (unset));
	border: var(--entry-border, 0);
	border-radius: var(--border-radius);
	box-shadow: var(--entry-box-shadow, unset);
}

.single-entry {
	margin-bottom: var(--single-entry-margin-bottom, var(--spacing-xxl));
}

.has-alignfull-first {
	--single-entry-margin-bottom: 0;
}

[class*="has-image-left"],
[class*="has-image-right"] {
	--entry-flex-direction: row;
}

.has-boxed {
	--entry-background: var(--color-white);
	--entry-border: var(--border);
	--entry-box-shadow: var(--shadow);
	--entry-overflow: hidden;
}

.has-boxed:not([class*="has-image-left-full"]):not([class*="has-image-right-full"]) {
	--entry-padding: var(--spacing-lg); /* Must be a single value for use in calc() full "full" images */
}

.has-image-background,
.has-boxed.has-image-left-full,
.has-boxed.has-image-right-full {
	--entry-wrap-padding: var(--spacing-lg);
}

.entry-wrap {
	display: flex;
	flex: 1; /* 1 1 100% breaks image-left/right-full */
	flex-direction: column;
	justify-content: var(--align-text-vertical);
	padding: var(--entry-wrap-padding, 0);
	color: var(--entry-wrap-color, unset);
	transition: all 0.3s ease-in-out;

	> *:not(.entry-overlay) {
		z-index: 1;
	}
}

.widget {
	--entry-width: 100%;
	--entry-wrap-padding: 0;
}

.entries {
	// Can't apply left/right margin because it overrides alignwide/alignfull.
	margin-bottom: var(--entries-margin-bottom, var(--spacing-md));

	--entry-image-line-height: 0;
	--entry-meta-margin: 0 0 var(--spacing-md) 0;

	&:last-child {
		--entries-margin-bottom: 0;
	}
}

.entries-wrap {
	display: flex;
	flex-wrap: wrap;
	align-items: var(--align-columns-vertical);
	justify-content: var(--align-columns);
	max-width: 100vw;
	margin: calc(var(--row-gap) * -0.5) calc(var(--column-gap) * -0.5);

	--entry-margin: calc(var(--row-gap) / 2) calc(var(--column-gap) / 2);
	--columns: var(--columns-xs);

	@include mq(sm) {
		--columns: var(--columns-sm);
	}

	@include mq(md) {
		--columns: var(--columns-md);
	}

	@include mq(lg) {
		--columns: var(--columns-lg);
	}
}

@include mq(false, sm) {

	.has-image-stack {
		--entry-flex-direction: column;
		--entry-flex-wrap: nowrap;
		--image-width: 100%;
		--entry-image-link-flex: 1 1 100%;
		--entry-image-link-order: -1;
	}
}
