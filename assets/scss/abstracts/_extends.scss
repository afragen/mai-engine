@mixin body {
	display: flex;
	flex-direction: column;
	min-height: var(--body-min-height, 100vh);
	min-height: -webkit-fill-available;
	color: var(--body-color, var(--color-body));
	font-weight: var(--body-font-weight); // No fallback, always output by Kirki.
	font-size: var(--body-font-size, var(--font-size-md));
	font-family: var(--body-font-family); // No fallback, always output by Kirki.
	line-height: var(--body-line-height, 1.625); // Perfect fourth.
	background: var(--body-background-color, var(--color-background));
}

@mixin heading {
	margin: var(--heading-margin, var(--heading-margin-top, 0) var(--heading-margin-sides, 0) var(--heading-margin-bottom, var(--spacing-md)));
	color: var(--heading-color, var(--color-heading));
	font-weight: var(--heading-font-weight); // No fallback, always output by Kirki.
	font-family: var(--heading-font-family); // No fallback, always output by Kirki.
	line-height: var(--heading-line-height, 1.219); // Perfect fourth.
	letter-spacing: var(--heading-letter-spacing, unset);
	text-transform: var(--heading-text-transform, unset);

	&:last-child {
		margin-bottom: 0;
	}

	.entry-content > &:not(:first-child) {
		margin-top: var(--spacing-xxl);
	}
}

@mixin button {
	position: relative;
	display: inline-block;
	width: auto;
	margin: var(--button-margin, 0);
	padding: var(--button-padding, (1em 2em));
	color: var(--button-color); // Color contrast automatically generated.
	font-weight: var(--button-font-weight, var(--heading-font-weight));
	font-size: var(--button-font-size, var(--font-size-base));
	font-family: var(--button-font-family); // No fallback, always output by Kirki.
	line-height: var(--button-line-height, 1);
	letter-spacing: var(--button-letter-spacing, normal);
	white-space: var(--button-white-space, normal);
	text-align: var(--button-text-align, center);
	text-transform: var(--button-text-transform, none);
	text-decoration: var(--button-text-decoration, none);
	overflow-wrap: var(--button-overflow-wrap, break-word);
	background: var(--button-background, var(--color-primary));
	border: var(--button-border, 0);
	border-radius: var(--button-border-radius, var(--border-radius));
	outline: var(--button-outline, (none));
	box-shadow: var(--button-box-shadow, none);
	transform: var(--button-transform, scale(1));
	cursor: var(--button-cursor, pointer);
	opacity: var(--button-opacity, 1);
	transition: var(--button-transition, var(--transition));

	&:hover,
	&:focus {
		--button-overlay-opacity: var(--button-overlay-opacity-hover, 0.2);
		color: var(--button-color-hover, var(--button-color)); // Color contrast automatically generated.
		text-decoration: var(--button-text-decoration-hover, none);
		background: var(--button-background-hover, var(--color-primary));
		outline: var(--button-outline-hover, (none));
		box-shadow: var(--button-box-shadow-hover, var(--button-box-shadow));
		transform: var(--button-transform-hover, var(--button-transform, scale(1))); // Pseudo element z-index hack.
	}

	&::before {
		position: absolute;
		top: var(--button-overlay-positioning, 0);
		right: var(--button-overlay-positioning, 0);
		bottom: var(--button-overlay-positioning, 0);
		left: var(--button-overlay-positioning, 0);
		z-index: var(--button-overlay-z-index, -1);
		display: var(--button-overlay-display, block);
		background-color: var(--button-overlay-color, var(--color-heading));
		border-radius: var(--button-border-radius, var(--border-radius));
		opacity: var(--button-overlay-opacity, 0);
		transition: var(--transition);
		content: "";
	}
}

@mixin button-style($style) {

	@if ("secondary" == $style) {
		color: var(--button-secondary-color); // Color contrast automatically generated.
		background: var(--button-secondary-background, var(--color-secondary));

		@include hover-focus {
			color: var(--button-secondary-color-hover, var(--button-secondary-color)); // Color contrast automatically generated.
			background: var(--button-secondary-background-hover, var(--color-secondary));
		}
	}

	@if ("outline" == $style) {
		color: var(--button-outline-color, var(--color-primary));
		line-height: calc(1em - 4px); // Makes height same as button with no border.
		background: transparent;
		border: 2px solid currentColor; // Same as Gutenberg default styles.

		@include hover-focus {
			color: var(--button-outline-color-hover, var(--color-secondary));
			background: transparent;
			border-color: currentColor;
		}

		&::before {
			display: none;
		}
	}

	@if ("link" == $style) {
		padding: var(--button-padding, (1em 0.5em));
		color: var(--button-link-color, var(--color-link));
		background: transparent;

		@include hover-focus {
			color: var(--button-link-color-hover, var(--color-heading));
			background: transparent;
		}

		&::before {
			display: none;
		}

		&::after {
			display: inline-block;
			margin-left: var(--spacing-xs);
			content: "\2192";
		}
	}

	@if ("small" == $style) {
		font-size: var(--font-size-sm);
		padding: 0.8em 1.25em; // Major third.
	}

	@if ("large" == $style) {
		font-size: var(--font-size-lg);
	}

	@if ("disabled" == $style) {
		cursor: not-allowed;
		opacity: 0.5;
	}
}

@mixin caption() {
	color: var(--caption-color, var(--color-body));
	font-size: var(--caption-font-size, var(--font-size-xs));
	text-align: var(--caption-text-align, (center));
}
