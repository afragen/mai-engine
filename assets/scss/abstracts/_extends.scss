@mixin body {
	display: flex;
	flex-direction: column;
	min-height: var(--body-min-height, 100vh);
	min-height: -webkit-fill-available;
	margin: 0;
	color: var(--color, var(--color-dark));
	font-weight: var(--font-weight-body);
	font-size: var(--font-size, var(--text-md));
	font-family: var(--font-family, var(--font-primary));
	line-height: var(--line-height);
	background: var(--body-background, var(--color-lightest));
}

@mixin heading {
	margin: var(--heading-margin, var(--heading-margin-top, 0) var(--heading-margin-sides, 0) var(--heading-margin-bottom, var(--spacing-md)));
	color: var(--heading-color, var(--color-darkest));
	font-weight: var(--font-weight-heading);
	font-family: var(--font-secondary);
	line-height: var(--heading-line-height, 1.2);
	letter-spacing: var(--heading-letter-spacing, unset);
	text-transform: var(--heading-text-transform, unset);

	&:last-child {
		margin-bottom: 0;
	}

	.entry-content > &:not(:first-child) {
		margin-top: var(--spacing-xxl);
	}
}

@mixin button-style($style) {

	@if ("secondary" == $style) {
		--button-color: var(--color-lightest);
		--button-background: var(--color-secondary);
		--button-background-hover: var(--color-secondary);
	}

	@if ("tertiary" == $style) {
		--button-padding: var(--button-padding, (var(--spacing-md) var(--spacing-xs)));
		--button-color: var(--color-primary);
		--button-background: transparent;
		--button-color-hover: var(--color-secondary);
		--button-background-hover: transparent;

		&::after {
			display: inline-block;
			margin-left: var(--spacing-xs);
			content: "\2192";
		}
	}

	@if ("outline" == $style) {
		border: 2px solid currentColor; // Same as Gutenberg default styles.
		--button-line-height: calc(1em - 4px); // Makes height same as button with no border.
		--button-color: var(--color-primary);
		--button-background: transparent;
		--button-overlay-positioning: -2px;
		--button-background-hover: transparent;

		&:hover,
		&:focus {
			border: 2px solid currentColor; // Same as Gutenberg default styles.
			--button-overlay-z-index: 1;
			--button-overlay-opacity: calc(var(--button-overlay-opacity-hover, 0.2) * 2); // Twice the opacity as default.
		}
	}

	@if ("small" == $style) {
		--button-padding: 1em 1.5em;
		--button-font-size: var(--text-sm);
	}

	@if ("large" == $style) {
		--button-padding: var(--spacing-lg) calc(var(--spacing-lg) * 2);
		--button-font-size: var(--text-lg);
	}

	@if ("disabled" == $style) {
		--button-cursor: not-allowed;
		--button-opacity: 0.5;
	}
}

@mixin button {
	position: relative;
	display: inline-block;
	width: auto;
	margin: var(--button-margin, 0);
	padding: var(--button-padding, (var(--spacing-md) calc(var(--spacing-md) * 2)));
	color: var(--button-color, #{map_get($button, "color")});
	font-weight: var(--button-font-weight, var(--font-weight-heading));
	font-size: var(--button-font-size, var(--text-md));
	font-family: var(--button-font-family, var(--font-primary));
	line-height: var(--button-line-height, 1);
	letter-spacing: var(--button-letter-spacing, normal);
	white-space: var(--button-white-space, normal);
	text-align: var(--button-text-align, center);
	text-transform: var(--button-text-transform, none);
	text-decoration: var(--button-text-decoration, none);
	background: var(--button-background, #{map_get($button, "background-color")});
	border: var(--button-border, #{map_get($button, "border")});
	border-radius: var(--button-border-radius, #{map_get($button, "border-radius")});
	transform: var(--button-transform, none);
	cursor: var(--button-cursor, pointer);
	opacity: var(--button-opacity, 1);
	transition: var(--button-transition, var(--transition));

	&:hover,
	&:focus {
		--button-overlay-opacity: var(--button-overlay-opacity-hover, 0.2);
		color: var(--button-color-hover, #{map_get($button, "color")});
		text-decoration: var(--button-text-decoration-hover, none);
		background: var(--button-background-hover, #{map_get($button, "background-color")});
		border: var(--button-border-hover, #{map_get($button, "border")});
		outline: var(--button-outline-hover, none);
		transform: var(--button-transform-hover, scale(1)); // Pseudo element z-index hack.
	}

	&::before {
		position: absolute;
		top: var(--button-overlay-positioning, 0);
		right: var(--button-overlay-positioning, 0);
		bottom: var(--button-overlay-positioning, 0);
		left: var(--button-overlay-positioning, 0);
		z-index: var(--button-overlay-z-index, -1);
		display: var(--button-overlay-display, block);
		background-color: var(--button-overlay-color, #{map_get($button, "overlay-color")});
		border-radius: var(--button-border-radius, #{map_get($button, "border-radius")});
		opacity: var(--button-overlay-opacity, 0);
		transition: var(--transition);
		content: "";
	}

	&:disabled {

		@include button-style(disabled);
	}
}
