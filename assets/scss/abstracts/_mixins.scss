////
/// Custom mixins.
///
/// @group  Tools
/// @author BizBudding <team@bizbudding.com>
/// @link   https://github.com/maithemewp/mai-engine
////

////
/// Border mixin
///
/// @group  Tools
/// @author BizBudding <team@bizbudding.com>
/// @link   https://github.com/maithemewp/mai-engine
////

@mixin border( $values ) {

	@include _directional-property(border, null, $values);
}

////
/// Well mixin
///
/// @group  Tools
/// @author BizBudding <team@bizbudding.com>
/// @link   https://github.com/maithemewp/mai-engine
////

@mixin box {
	padding: var(--gap);
	border: var(--border);
	border-radius: var(--border-radius);
	background-color: var(--color-background);

	p {

		&:last-of-type {
			margin-bottom: 0;
		}
	}
}

////
/// Hover focus mixin
///
/// @group  Tools
/// @author BizBudding <team@bizbudding.com>
/// @link   https://github.com/maithemewp/mai-engine
////

@mixin hover-focus {

	&:hover,
	&:focus,
	&:active {

		@content;
	}
}

////
/// Icon mixin
///
/// @group  Tools
/// @author BizBudding <team@bizbudding.com>
/// @link   https://github.com/maithemewp/mai-engine
////

@mixin icon($glyph: "\f005", $font-weight: 400) {
	font-family: "Font Awesome 5 Free", sans-serif;
	font-weight: $font-weight;
	content: $glyph;
}

////
/// Media Query mixin
///
/// @param {String | Boolean} $from (false) - One of $screen-breakpoints
/// @param {String | Boolean} $until (false) - One of $screen-breakpoints
/// @param {String | Boolean} $and (false) - Additional media query parameters
/// @param {String} $media-type ($screen-media-type) - Media type: screen, printâ€¦
/// @param {String} $screens ($screen-breakpoints) - Breakpoints map
////
@function mq-get-breakpoint-width($name, $screens: $screens) {

	@if map-has-key($screens, $name) {

		@return map-get($screens, $name);
	} @else {

		@warn "Breakpoint #{$name} wasn't found in $screens.";
	}
}

@mixin mq(
	$from: false,
	$until: false,
	$and: false,
	$media-type: all,
	$screens: $screens
) {
	$min-width: 0;
	$max-width: 0;
	$media-query: "";

	// From: this breakpoint (inclusive)
	@if $from {

		@if type-of($from) == number {
			$min-width: $from;
		} @else {
			$min-width: mq-get-breakpoint-width($from, $screens);
		}
	}

	// Until: that breakpoint (exclusive)
	@if $until {

		@if type-of($until) == number {
			$max-width: $until;
		} @else {
			$max-width: mq-get-breakpoint-width($until, $screens);
		}
	}

	@if $min-width != 0 {
		$media-query: "#{$media-query} and (min-width: #{$min-width})";
	}

	@if $max-width != 0 {
		$media-query: "#{$media-query} and (max-width: #{$max-width})";
	}

	@if $and {
		$media-query: "#{$media-query} and #{$and}";
	}

	// Remove unnecessary media query prefix 'all and '
	@if ($media-type == "all" and $media-query != "") {
		$media-type: "";
		$media-query: str-slice(unquote($media-query), 6);
	}

	@media #{$media-type + $media-query} {

		@content;
	}
}

////
/// Notice mixin
///
/// @group  Tools
/// @author BizBudding <team@bizbudding.com>
/// @link   https://github.com/maithemewp/mai-engine
////

@mixin notice($color: "info") {
	margin-bottom: var(--spacing-m);

	@include box;

	@if $color != "info" {
		border-color: var(--color-#{$color});
		color: var(--color-#{$color});
		background-color: rgba(var(--color-#{$color}), 0.1);
	}
}

////
/// Overlay mixin
///
/// @group  Tools
/// @author BizBudding <team@bizbudding.com>
/// @link   https://github.com/maithemewp/mai-engine
////

@mixin overlay {
	overflow: hidden;
	position: relative;

	&:before {
		display: block;
		background-color: var(--color-shadow);
		opacity: var(--shadow-opacity);
		content: "";

		@include position(absolute, 0 0 0 0);
	}
}

////
/// Transition mixin
///
/// @group  Tools
/// @author BizBudding <team@bizbudding.com>
/// @link   https://github.com/maithemewp/mai-engine
////

@mixin transition {
	transition: var(--transition);
}
