.has-shadow {
	box-shadow: var(--shadow);
}

.is-circle,
.is-square {
	display: grid;

	> :first-child {
		display: flex;
		flex-direction: column;
		place-content: center;
		grid-area: 1/-1;
	}
}

.is-circle {
	border-radius: 9999px;
}

.is-rounded {
	border-radius: var(--border-radius);
}

.is-circle::before,
.is-square::before {
	display: block;
	grid-area: 1/-1;
	padding-bottom: 100%;
	content: "";
}

.has-no-margin-top {
	margin-top: 0 !important;
}

.has-no-margin-bottom {
	margin-bottom: 0 !important;
}

@each $breakpoint-name, $breakpoint-size in $breakpoints {

	.has-#{ $breakpoint-name }-max-width {
		max-width: var(--breakpoint-#{ $breakpoint-name });

		@include margin(null auto);
	}
}

.has-no-padding {
	padding: 0 !important;
}

@each $spacing-name, $spacing-size in $spacing {

	.has-#{ $spacing-name }-margin-top {
		margin-top: var(--spacing-#{ $spacing-name }) !important;
	}

	.has-#{ $spacing-name }-margin-bottom {
		margin-bottom: var(--spacing-#{ $spacing-name }) !important;
	}

	.has--#{ $spacing-name }-margin-top {
		margin-top: calc(var(--spacing-#{ $spacing-name }) * -1) !important;
	}

	.has--#{ $spacing-name }-margin-bottom {
		margin-bottom: calc(var(--spacing-#{ $spacing-name }) * -1) !important;
	}

	.has-#{ $spacing-name }-padding {
		padding: var(--spacing-#{ $spacing-name }) !important;
	}

}

.has-overlap {
	position: relative;
	z-index: 2;
	overflow: visible;
}

.flip-horizontal {
	--scale-y: -1;
	transform: scale(var(--scale-x, 1), var(--scale-y, 1));
}

.flip-vertical {
	--scale-x: -1;
	transform: scale(var(--scale-x, 1), var(--scale-y, 1));
}
